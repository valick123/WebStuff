1.Добавит basename={repo-name} в Router.
1.Файлы быз данных .json разделить т.к. при запросе возвращает 
весь файл, а не его часть как с json-server.
3.Для работы роутера на GitHubPages:
	3.1.Добавит basename={repo-name} в Router.
	3.2.Установить gh-pages.
	3.3.В package.json добавть "homepage": "http://{user-name}.github.io/{repo-name}/", 
	в корень и "predeploy":"npm run build", "deploy":"gh-pages -d {папка в готовым бандлом}", в раздел "scripts".
	3.4.Добавить в index.htm скрипт:
<script type="text/javascript">
      
      (function(l) {
        if (l.search[1] === '/' ) {
          var decoded = l.search.slice(1).split('&').map(function(s) { 
            return s.replace(/~and~/g, '&')
          }).join('?');
          window.history.replaceState(null, null,
              l.pathname.slice(0, -1) + decoded + l.hash
          );
        }
      }(window.location))
</script>
	Скрипт должен идти первым!!!
	3.5.Добавить в готовый проект файл 404.html:
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Single Page Apps for GitHub Pages</title>
    <script type="text/javascript">
      var pathSegmentsToKeep = 0;

      var l = window.location;
      l.replace(
        l.protocol + '//' + l.hostname + (l.port ? ':' + l.port : '') +
        l.pathname.split('/').slice(0, 1 + pathSegmentsToKeep).join('/') + '/?/' +
        l.pathname.slice(1).split('/').slice(pathSegmentsToKeep).join('/').replace(/&/g, '~and~') +
        (l.search ? '&' + l.search.slice(1).replace(/&/g, '~and~') : '') +
        l.hash
      );

    </script>
  </head>
  <body>
  </body>
</html>
	Если не использовать кастомный домен, то 
	заменить var pathSegmentsToKeep = 0; на var pathSegmentsToKeep = 1; 
	3.6.В готовым index.html поменять <base href="/" />
	    на <base href="./" />
	3.7.
	 